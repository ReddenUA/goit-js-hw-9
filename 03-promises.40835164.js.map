{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,IAAIC,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACLN,EAEFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAGpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,MAEpBA,MAEFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBb,EAAAgB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,UApB9CQ,SAASC,cAAc,SAuC/BC,iBAAiB,UAfF,SAAAC,GACvBA,EAAEC,iBAQF,IAPA,IAAgCC,EAAAF,EAAEG,cAA1Bd,EAAwBa,EAAxBb,MAAOe,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAEjBC,EAAaC,OAAOlB,EAAMmB,OACxBC,EAAiBF,OAAOF,EAAOG,OAC/BE,EAAYH,OAAOH,EAAKI,OAGrBG,EAAI,EAAGA,GAAKF,EAAgBE,GAAK,EACxCjC,EAAciC,EAAGL,GACjBA,GAAcI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formBlock = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n       \n        resolve({ position, delay });\n      } else {\n       \n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nconst onCreatePromises = e => {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget;\n\n  let firstDelay = Number(delay.value);\n  const promisesAmount = Number(amount.value);\n  const delayStep = Number(step.value);\n\n \n  for (let i = 1; i <= promisesAmount; i += 1) {\n    createPromise(i, firstDelay);\n    firstDelay += delayStep;\n  }\n};\n\nformBlock.addEventListener('submit', onCreatePromises);"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","document","querySelector","addEventListener","e","preventDefault","_currentTarget","currentTarget","step","amount","firstDelay","Number","value","promisesAmount","delayStep","i"],"version":3,"file":"03-promises.40835164.js.map"}